Для запрета кэширования можно выставить его в следующее значение:
Cache-Control: no-store, no-cache, must-revalidate

Заголовок Last-Modified может отправляться сервером для того, чтобы передать браузеру информацию о дате последнего изменения документа. Дата должна за-даваться в том же формате, что и в случае с заголовком Expires:
Last-Modified: Tue, 4 Aug 1995 04:58:08 GMT
При наличии такой информации в локальном кэше браузер может в следующем запросе отправить ее в заголовке If-Modified-Since:
If-Modified-Since: Tue, 29 Oct 1994 19:43:31 GMT
В случае если дата последнего изменения осталась прежней, сервер ответит ко-дом состояния 304 Not Modified и данные не будут отправлены повторно. В про-тивном случае сервер передаст новую версию файла.
Данная схема позволяет экономить время, затрачиваемое на передачу данных, однако при ее использовании браузер все равно будет устанавливать соединение с сервером, чтобы узнать, имеется ли более новая версия.

В спецификации RFC-2616 HTTP-кэшированию посвящена целая глава.

Для PHP у нас получится следующий код (в Expires прописана дата на 10 лет впе-ред относительно текущего времени на сервере):
<?php
header("Cache-Control: public, max-age=315360000");
header("Expires: Mon, 01 Jul 2019 00:00:00");
?>
Листинг 4.8.

И в случае nginx:
location ?* ^.+\.(bmp|gif|jpg|jpeg|png|swf|tiff|swf|flv)$ {
  expires 10y;
  header set Cache-Control public;
}
Листинг 4.10.
10-летний срок кэширования здесь вполне оправдан: таким образом мы сообщаем пользователям, что ресурсы в течение этого времени перезапрашивать не нужно. Если ресурсы будут изменены, то нам все равно придется форсировать сброс кэша (об этом чуть ниже), чтобы гарантировать корректное отображение материа-лов сайта во всех браузерах.

Запрет кэширования динамических ресурсов:
Для того чтобы запретить кэширование во всех браузерах HTML-документов, нуж-но написать с помощью PHP (в Expires прописано текущее время на сервере):
header("Expires: Wed, 01 July 2009 00:00:00");
header("Cache-Control: no-store, no-cache, must-revalidate, private");
header("Pragma: no-cache");
Листинг 4.14.

Для nginx:
location ?* ^.+\.(php|pHTML|sHTML|HTML|xml|htm)$ {
  expires 0;
  header set Cache-Control "no-store, no-cache, must-revalidate, pri-vate";
  header set Pragma "no-cache";
}
Листинг 4.16.

Существует два способа обеспечить условное кэширование: при помощи заголов-ков Last-Modified + If-Modified-Since и ETag + If-None-Match. Первый заголо-вок в паре относится к ответу со стороны сервера, второй – к запросу со стороны клиента, который уже получил соответствующий ответ сервера и теперь желает проверить, изменилось ли что-нибудь с той поры.
При помощи пары Last-Modified мы можем установить соответствие ресурса только по времени его изменения.

